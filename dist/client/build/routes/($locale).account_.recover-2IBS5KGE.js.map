{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.recover.jsx"],
  "sourcesContent": ["import { json, redirect } from '@shopify/remix-oxygen';\nimport { Form, Link, useActionData } from '@remix-run/react';\nimport \"../styles/auth.css?__remix_sideEffect__\";\n/**\n * @param {LoaderFunctionArgs}\n */\nexport async function loader({ context }) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect('/account');\n  }\n\n  return json({});\n}\n\n/**\n * @param {ActionFunctionArgs}\n */\nexport async function action({ request, context }) {\n  const { storefront } = context;\n  const form = await request.formData();\n  const email = form.has('email') ? String(form.get('email')) : null;\n\n  if (request.method !== 'POST') {\n    return json({ error: 'Method not allowed' }, { status: 405 });\n  }\n\n  try {\n    if (!email) {\n      throw new Error('Please provide an email.');\n    }\n    await storefront.mutate(CUSTOMER_RECOVER_MUTATION, {\n      variables: { email }\n    });\n\n    return json({ resetRequested: true });\n  } catch (error) {\n    const resetRequested = false;\n    if (error instanceof Error) {\n      return json({ error: error.message, resetRequested }, { status: 400 });\n    }\n    return json({ error, resetRequested }, { status: 400 });\n  }\n}\n\nexport default function Recover() {\n  /** @type {ActionReturnData} */\n  const action = useActionData();\n\n  return (\n    <div className=\"account-recover\">\n      <div>\n        {action?.resetRequested ?\n        <>\n            <h1>Request Sent.</h1>\n            <p className='desc'>\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n            <br />\n            <Link className='login-text' to=\"/account/login\">Return to Login</Link>\n          </> :\n\n        <>\n            <h1 className='title'>Forgot Password.</h1>\n            <p className='desc'>\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n            <br />\n            <div className='form'>\n            <Form method=\"POST\">\n              <fieldset>\n                <input\n                  aria-label=\"Email address\"\n                  autoComplete=\"email\"\n                  // eslint-disable-next-line jsx-a11y/no-autofocus\n                  autoFocus\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  required\n                  type=\"email\" />\n\n              </fieldset>\n              {action?.error ?\n              <p>\n                  <mark>\n                    <small>{action.error}</small>\n                  </mark>\n                </p> :\n\n              <br />}\n\n              <button className='login-btn' type=\"submit\">Request Reset Link</button>\n             <br></br>\n              <p>\n                <Link className='login-text' to=\"/account/login\">Login \u2192</Link>\n              </p>\n            </Form>\n          \n            </div>\n          </>}\n\n      </div>\n    </div>);\n\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customerrecover\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover(\n    $email: String!,\n    $country: CountryCode,\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n\n/**\n * @typedef {{\n *   error?: string;\n *   resetRequested?: boolean;\n * }} ActionResponse\n */\n\n/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').ActionFunctionArgs} ActionFunctionArgs */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */\n/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof action>} ActionReturnData */"],
  "mappings": "sNAqDQ,IAAAA,EAAA,OARO,SAARC,GAA2B,CAEhC,IAAMC,EAASC,EAAc,EAE7B,SACE,OAAC,OAAI,UAAU,kBACb,mBAAC,OACE,SAAAD,GAAQ,kBACT,oBACI,oBAAC,MAAG,yBAAa,KACjB,OAAC,KAAE,UAAU,OAAO,kJAIpB,KACA,OAAC,OAAG,KACJ,OAACE,EAAA,CAAK,UAAU,aAAa,GAAG,iBAAiB,2BAAe,GAClE,KAEF,oBACI,oBAAC,MAAG,UAAU,QAAQ,4BAAgB,KACtC,OAAC,KAAE,UAAU,OAAO,0GAGpB,KACA,OAAC,OAAG,KACJ,OAAC,OAAI,UAAU,OACf,oBAACC,EAAA,CAAK,OAAO,OACX,oBAAC,YACC,mBAAC,SACC,aAAW,gBACX,aAAa,QAEb,UAAS,GACT,GAAG,QACH,KAAK,QACL,YAAY,gBACZ,SAAQ,GACR,KAAK,QAAQ,EAEjB,EACCH,GAAQ,SACT,OAAC,KACG,mBAAC,QACC,mBAAC,SAAO,SAAAA,EAAO,MAAM,EACvB,EACF,KAEF,OAAC,OAAG,KAEJ,OAAC,UAAO,UAAU,YAAY,KAAK,SAAS,8BAAkB,KAC/D,OAAC,OAAG,KACH,OAAC,KACC,mBAACE,EAAA,CAAK,UAAU,aAAa,GAAG,iBAAiB,wBAAO,EAC1D,GACF,EAEA,GACF,EAEJ,EACF,CAEJ",
  "names": ["import_jsx_runtime", "Recover", "action", "useActionData", "Link", "Form"]
}
